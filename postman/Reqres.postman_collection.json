{
	"info": {
		"_postman_id": "e9479adf-d4f7-461f-a861-3304ed56ce6f",
		"name": "Reqres",
		"description": "Это тестовая коллекция предназначена для 2e2 тестирования",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38918764"
	},
	"item": [
		{
			"name": "List_users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is json format\", function () {\r",
							"    pm.expect(response).to.be.a(\"object\");\r",
							"});\r",
							"\r",
							"pm.test(\"Data is array\", function () {\r",
							"    pm.expect(response.data).to.be.a(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Id in array is a number\", function () {\r",
							"    pm.expect(response.data[0].id).to.be.a(\"number\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}users?page=2",
					"host": [
						"{{URL}}users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				},
				"description": "Запрос отдает список юзеров"
			},
			"response": [
				{
					"name": "List_users",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Tue, 15 Oct 2024 17:47:41 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1729013888&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KbZhdYR1A5l1RMPLg%2FihWq0dfyLCxNsg4vBoFO2sN7Q%3D\"}]}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=https://nel.heroku.com/reports?ts=1729013888&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KbZhdYR1A5l1RMPLg%2FihWq0dfyLCxNsg4vBoFO2sN7Q%3D"
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Etag",
							"value": "W/\"406-ut0vzoCuidvyMf8arZpMpJ6ZRDw\""
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						},
						{
							"key": "Cache-Control",
							"value": "max-age=14400"
						},
						{
							"key": "CF-Cache-Status",
							"value": "HIT"
						},
						{
							"key": "Age",
							"value": "573"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "8d31a2bf59ea927d-FRA"
						},
						{
							"key": "Content-Encoding",
							"value": "br"
						}
					],
					"cookie": [],
					"body": "{\n    \"page\": 2,\n    \"per_page\": 6,\n    \"total\": 12,\n    \"total_pages\": 2,\n    \"data\": [\n        {\n            \"id\": 7,\n            \"email\": \"michael.lawson@reqres.in\",\n            \"first_name\": \"Michael\",\n            \"last_name\": \"Lawson\",\n            \"avatar\": \"https://reqres.in/img/faces/7-image.jpg\"\n        },\n        {\n            \"id\": 8,\n            \"email\": \"lindsay.ferguson@reqres.in\",\n            \"first_name\": \"Lindsay\",\n            \"last_name\": \"Ferguson\",\n            \"avatar\": \"https://reqres.in/img/faces/8-image.jpg\"\n        },\n        {\n            \"id\": 9,\n            \"email\": \"tobias.funke@reqres.in\",\n            \"first_name\": \"Tobias\",\n            \"last_name\": \"Funke\",\n            \"avatar\": \"https://reqres.in/img/faces/9-image.jpg\"\n        },\n        {\n            \"id\": 10,\n            \"email\": \"byron.fields@reqres.in\",\n            \"first_name\": \"Byron\",\n            \"last_name\": \"Fields\",\n            \"avatar\": \"https://reqres.in/img/faces/10-image.jpg\"\n        },\n        {\n            \"id\": 11,\n            \"email\": \"george.edwards@reqres.in\",\n            \"first_name\": \"George\",\n            \"last_name\": \"Edwards\",\n            \"avatar\": \"https://reqres.in/img/faces/11-image.jpg\"\n        },\n        {\n            \"id\": 12,\n            \"email\": \"rachel.howell@reqres.in\",\n            \"first_name\": \"Rachel\",\n            \"last_name\": \"Howell\",\n            \"avatar\": \"https://reqres.in/img/faces/12-image.jpg\"\n        }\n    ],\n    \"support\": {\n        \"url\": \"https://reqres.in/#support-heading\",\n        \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"\n    }\n}"
				}
			]
		},
		{
			"name": "Create _user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\":{\r",
							"        \"name\":{\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"job\":{\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"id\":{\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"createdAt\":{\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"    },\r",
							"    \"required\":[\r",
							"        \"name\",\r",
							"        \"job\",\r",
							"        \"id\",\r",
							"        \"createdAt\"\r",
							"    ]\r",
							"};\r",
							"\r",
							"pm.test('Schema is valid', function(){\r",
							"    pm.response.to.have.jsonSchema(schema)\r",
							"});\r",
							"console.log(schema)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"job\": \"{{job}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}users",
					"host": [
						"{{URL}}users"
					]
				},
				"description": "Запрос на создание юзера"
			},
			"response": []
		},
		{
			"name": "Change_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Date is present\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"const JsonData = pm.response.json();\r",
							"pm.test(\"Response_is_json\", ()=> {\r",
							"    pm.expect(JsonData).to.be.a(\"object\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response_include_name\", ()=> {\r",
							"    pm.expect(JsonData.name).to.be.a(\"string\")\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Gurgen\",\r\n    \"job\": \"QA-Jun\",\r\n    \"city\": \"{{$randomCity}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"avatar\": \"{{$randomAvatarImage}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}users/476",
					"host": [
						"{{URL}}users"
					],
					"path": [
						"476"
					]
				},
				"description": "Запрос на изменение данных"
			},
			"response": []
		},
		{
			"name": "Update_user",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Gurgen_change\",\r\n    \"job\": \"Job_change\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}users/54",
					"host": [
						"{{URL}}users"
					],
					"path": [
						"54"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "name",
			"value": "Gurgen",
			"type": "string"
		},
		{
			"key": "job",
			"value": "QA-Junior",
			"type": "string"
		}
	]
}